name: CI

on:
  push:
    paths-ignore:
    - '.devcontainer/**'
    - '.gitpod.yml'
    - '.vscode/**'
  pull_request:
    paths-ignore:
    - '.devcontainer/**'
    - '.gitpod.yml'
    - '.vscode/**'
  schedule:
    # Run against the last commit on the default branch on Friday at 8pm (UTC?)
    - cron: '0 20 * * 5'

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        # https://github.com/marketplace/actions/skip-duplicate-actions
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: 'same_content'
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'

  test:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    strategy:
      # Continue running other jobs in the matrix even if one fails.
      fail-fast: false
      matrix:
        rust:
          - stable
          - beta
          - 1.60.0  # MSRV
          - nightly # For checking minimum version dependencies.

    steps:
      - name: Checkout Moka
        uses: actions/checkout@v2

      # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
      # 2-core CPU (x86_64), 7 GB of RAM
      - name: Show CPU into
        run: |
          nproc
          lscpu

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1

      - name: cargo clean
        uses: actions-rs/cargo@v1
        with:
          command: clean

      - name: Downgrade dependencies to minimal versions (Nightly only)
        uses: actions-rs/cargo@v1
        if: ${{ matrix.rust == 'nightly' }}
        with:
          command: update
          args: -Z minimal-versions

      - name: Pin some dependencies to specific versions (Nightly only)
        if: ${{ matrix.rust == 'nightly' }}
        run: ./.ci_extras/pin-crate-vers-nightly.sh

      - name: Pin some dependencies to specific versions (MSRV only)
        if: ${{ matrix.rust == '1.60.0' }}
        run: ./.ci_extras/pin-crate-vers-msrv.sh

      - name: Show cargo tree
        uses: actions-rs/cargo@v1
        with:
          command: tree
          args: --features 'future, dash'

      - name: Run tests (debug, sync feature)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features sync
        env:
          RUSTFLAGS: '--cfg rustver'

      - name: Run tests (release, sync feature)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --features sync
        env:
          RUSTFLAGS: '--cfg rustver'

      - name: Run tests (sync feature, thread-pool test for sync::Cache)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --lib --features sync sync::cache::tests::enabling_and_disabling_thread_pools -- --exact --ignored

      - name: Run tests (sync feature, thread-pool test for sync::SegmentedCache)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --lib --features sync sync::segment::tests::enabling_and_disabling_thread_pools -- --exact --ignored

      - name: Run tests (sync feature, key lock test for notification)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --lib --features sync sync::cache::tests::test_key_lock_used_by_immediate_removal_notifications -- --exact --ignored

      - name: Run tests (sync feature, drop value after eviction for sync::Cache)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --lib --features sync sync::cache::tests::drop_value_immediately_after_eviction -- --exact --ignored

      - name: Run tests (sync feature, drop value after eviction for sync::SegmentedCache)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --lib --features sync sync::segment::tests::drop_value_immediately_after_eviction -- --exact --ignored

      - name: Run tests (future feature, but no sync feature)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-default-features --features 'future, atomic64, quanta'

      - name: Run tests (future, sync and logging features)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features 'future, sync, logging'
